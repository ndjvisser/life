name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zlib1g-dev libjpeg-dev libpng-dev redis-server redis-tools

      - name: Start Redis
        run: |
          set -euo pipefail
          # Start Redis in the background (daemonized)
          sudo redis-server --daemonize yes
          # Health check loop: wait up to ~10 seconds for Redis to respond
          for i in {1..20}; do
            if redis-cli ping | grep -q PONG; then
              echo "Redis is up"
              break
            fi
            sleep 0.5
          done
          # Fail the step if Redis is not healthy
          if ! redis-cli ping | grep -q PONG; then
            echo "Redis failed to start" >&2
            exit 1
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel
          # Install pip-tools first to generate constraints
          pip install pip-tools
          # Install project in development mode with all dependencies
          pip install -e ".[dev]"
          # Generate and verify constraints
          make generate-constraints

      - name: Check Django setup
        run: python manage.py check
        env:
          DJANGO_SETTINGS_MODULE: life_dashboard.life_dashboard.settings

      - name: Run Migrations
        run: python manage.py migrate
        env:
          DJANGO_SETTINGS_MODULE: life_dashboard.life_dashboard.settings

      - name: Run Domain Tests (Fast)
        run: make test-domain-fast
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}

      - name: Run Contract Tests
        run: make test-contracts
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}

      - name: Run Property-Based Tests
        run: make test-properties
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}
        env:
          HYPOTHESIS_PROFILE: ci

      - name: Run Snapshot Tests
        run: make test-snapshots
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}

      - name: Run Integration Tests
        run: pytest -m integration
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}
        env:
          DJANGO_SETTINGS_MODULE: life_dashboard.life_dashboard.test_settings

      - name: Run Ruff (Linting and Formatting)
        run: |
          ruff check .
          ruff format . --check

      - name: Run Type Checking
        run: make type-check-strict

      - name: Check Dependencies
        run: make check-deps

      - name: Run Architecture Checks
        run: make check-architecture
        env:
          IMPORT_LINTER_STRICT: "1"

  domain-testing:
    name: Domain-First Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [domain, properties, contracts, snapshots]
        include:
          - test-type: domain
            make-target: test-domain
            description: "Pure Domain Tests (Fastest)"
            env: { HYPOTHESIS_PROFILE: default }
          - test-type: properties
            make-target: test-properties
            description: "Property-Based Tests"
            env: { HYPOTHESIS_PROFILE: ci }
          - test-type: contracts
            make-target: test-contracts
            description: "Service Contract Tests"
            env: { HYPOTHESIS_PROFILE: default }
          - test-type: snapshots
            make-target: test-snapshots
            description: "API Snapshot Tests"
            env: { HYPOTHESIS_PROFILE: default }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run ${{ matrix.description }}
        run: make ${{ matrix.make-target }}
        env: ${{ matrix.env }}
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}

  comprehensive-testing:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y redis-server redis-tools

      - name: Start Redis
        run: |
          sudo redis-server --daemonize yes
          sleep 2
          redis-cli ping

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run Thorough Test Suite
        run: make test-thorough
        env:
          HYPOTHESIS_PROFILE: thorough
          DJANGO_SETTINGS_MODULE: life_dashboard.life_dashboard.test_settings

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
